import"../chunks/DsnmJJEf.js";import{p as M,c as x,f as T,d as s,s as t,x as e,y as b,b as p,r as a}from"../chunks/CJxMCMyS.js";import{T as C}from"../chunks/CI9CzMx_.js";import{M as L}from"../chunks/arTckI8S.js";import{g as A}from"../chunks/BoiS-z8Y.js";import{M as o}from"../chunks/CiWbdFnG.js";import{I as E}from"../chunks/Bb5k25MH.js";var R=T(`<section><!> <p>Details:</p> <ul><li>plain CSS</li> <li>zero dependencies</li> <li>exports one main stylesheet that doubles as a reset with basic HTML tag styles</li> <li>exports a basic theme that can be replaced with your own</li> <li>also exports the underlying CSS data, helpers, and types, which can be used in many ways,
				including outputting an optimized utilities class file</li> <li>uses its own concept of style variables, a specialization of CSS custom properties and
				design tokens <ul><li>variables are the main source of truth</li> <li>each variable provides values to light and/or dark mode</li> <li>includes optional utility and component classes that use the variables</li></ul></li> <li>themes are groups of variables</li> <li>dark mode is a first-class concept in the system, not a theme, instead each theme can
				support light and/or dark <!></li> <li>is agnostic to JS frameworks, for example usage see <a href="https://www.fuz.dev/docs/Themed"><code>Themed</code></a> in my Svelte UI library <a href="https://www.fuz.dev/">Fuz</a></li></ul> <p>The stylesheets:</p> <ul><li><!> - the main stylesheet and CSS reset</li> <li><!> - or bring your own</li> <li><!> - a reference implementation using Moss's helpers that includes only the utility classes your
				code uses, generated by <a href="https://github.com/ryanatkn/gro">Gro</a> with the Moss helpers in <!>. I can add a Vite plugin if there's demand.</li> <li>There are no tools yet for optimizing away unused variables, so <code>style.css</code> and <code>theme.css</code> have some bloat.</li></ul> <p>Moss is being made to support <a href="https://www.zzz.software/">Zzz</a> and <a href="https://www.ryanatkn.com/">my other projects</a> that focus on end-users, so it'll grow
			relatively slowly as I encounter more usecases. It's hobby-ready but expect a lot of breaking changes.
			Feel free to take the code and ideas for your own purposes.</p> <p>In the docs, you'll see I'm writing asides using "‚ö†Ô∏è" with open questions and other discussion
			of uncertainties. Your input is appreciated in the GitHub <a href="https://github.com/ryanatkn/moss/issues">issues</a> and <a href="https://github.com/ryanatkn/moss/discussions">discussions</a>, or find me on <a href="https://bsky.app/profile/ryanatkn.com">Bluesky</a>. See <a href="https://github.com/ryanatkn/moss/blob/main/contributing.md">contributing.md</a> for more
			üåø</p></section>`);function D(g,v){M(v,!0);const w=A("introduction");C(g,{get tome(){return w},children:(_,P)=>{var i=R(),u=s(i);E(u,{});var r=t(u,4),d=t(s(r),14),k=t(s(d));L(k,{path:"Web/CSS/color-scheme",children:(h,I)=>{e();var c=b("color-schemes");p(h,c)},$$slots:{default:!0}}),a(d),e(2),a(r);var m=t(r,4),n=s(m),$=s(n);o($,{path:"style.css"}),e(),a(n);var l=t(n,2),S=s(l);o(S,{path:"theme.css"}),e(),a(l);var f=t(l,2),y=s(f);o(y,{path:"moss.css",base_path:"https://github.com/ryanatkn/moss/blob/main/src/routes/",children:(h,I)=>{e();var c=b("$routes/moss.css");p(h,c)},$$slots:{default:!0}});var z=t(y,4);o(z,{path:"gen_moss_css.js"}),e(),a(f),e(2),a(m),e(4),a(i),p(_,i)},$$slots:{default:!0}}),x()}export{D as component};
