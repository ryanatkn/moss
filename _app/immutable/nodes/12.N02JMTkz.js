import"../chunks/DsnmJJEf.js";import{p as L,c as P,f as A,d as t,s as e,x as s,y as n,b as r,r as o}from"../chunks/BQn7ASOj.js";import{T as E}from"../chunks/Bd0Fx9i5.js";import{M as F}from"../chunks/JzCiX6H4.js";import{g as R}from"../chunks/ByU9M1-j.js";import{M as m,F as f}from"../chunks/BbUzoczO.js";import{I as B}from"../chunks/CUfM0YD8.js";var Y=A(`<section><!> <p>Details:</p> <ul><li>plain CSS</li> <li>zero dependencies</li> <li>exports one main stylesheet that doubles as a reset with basic HTML tag styles</li> <li>exports a basic theme that can be replaced with your own</li> <li>also exports the underlying CSS data, helpers, and types, which can be used in many ways,
				including outputting an optimized utilities class file</li> <li>uses its own concept of style variables, a specialization of CSS custom properties and
				design tokens <ul><li>variables are the main source of truth</li> <li>each variable provides values to light and/or dark mode</li> <li>includes optional utility and component classes that use the variables</li></ul></li> <li>themes are groups of variables</li> <li>dark mode is a first-class concept in the system, not a theme, instead each theme can
				support light and/or dark <!></li> <li>is agnostic to JS frameworks, for example usage see <a href="https://www.fuz.dev/docs/Themed"><code>Themed</code></a> in my Svelte UI library <a href="https://www.fuz.dev/">Fuz</a></li></ul> <p>The stylesheets:</p> <ul><li><!> - the main stylesheet and CSS reset</li> <li><!> - or bring your own</li> <li><!> - a generated reference
				implementation using Moss's helpers that includes only the utility classes your code uses, generated
				by <a href="https://github.com/ryanatkn/gro">Gro</a> with <!> using the Moss helpers in <!>. I can add a Vite plugin if there's demand.</li> <li>There are not yet tools for optimizing away unused variables, so <code>style.css</code> and <code>theme.css</code> have some bloat.</li></ul> <p>Moss is being made to support <a href="https://www.zzz.software/">Zzz</a> and <a href="https://www.ryanatkn.com/">my other projects</a> that focus on end-users, so it'll grow
			relatively slowly as I encounter more usecases. It's hobby-ready but expect a lot of breaking changes.
			Feel free to take the code and ideas for your own purposes.</p> <p>In the docs, you'll see I'm writing asides using "‚ö†Ô∏è" with open questions and other discussion
			of uncertainties. Your input is appreciated in the GitHub <a href="https://github.com/ryanatkn/moss/issues">issues</a> and <a href="https://github.com/ryanatkn/moss/discussions">discussions</a>, or find me on <a href="https://bsky.app/profile/ryanatkn.com">Bluesky</a>. See <!> for more üåø</p></section>`);function W($,k){L(k,!0);const x=R("introduction");E($,{get tome(){return x},children:(S,G)=>{var l=Y(),y=t(l);B(y,{});var c=e(y,4),g=e(t(c),14),z=e(t(g));F(z,{path:"Web/CSS/color-scheme",children:(a,h)=>{s();var i=n("color-schemes");r(a,i)},$$slots:{default:!0}}),o(g),s(2),o(c);var d=e(c,4),u=t(d),I=t(u);m(I,{path:"style.css"}),s(),o(u);var p=e(u,2),M=t(p);m(M,{path:"theme.css"}),s(),o(p);var v=e(p,2),b=t(v);f(b,{path:"src/routes/moss.css",children:(a,h)=>{s();var i=n("src/routes/moss.css");r(a,i)},$$slots:{default:!0}});var _=e(b,4);f(_,{path:"src/routes/moss.gen.css.ts",children:(a,h)=>{s();var i=n("src/routes/moss.gen.css.ts");r(a,i)},$$slots:{default:!0}});var T=e(_,2);m(T,{path:"gen_moss_css.js"}),s(),o(v),s(2),o(d);var w=e(d,4),C=e(t(w),7);f(C,{path:"contributing.md",children:(a,h)=>{s();var i=n("contributing.md");r(a,i)},$$slots:{default:!0}}),s(),o(w),o(l),r(S,l)},$$slots:{default:!0}}),P()}export{W as component};
