import{t as k,b as n,a as r}from"../chunks/CP7485SI.js";import{p as U,a as z,f as T,s as t,c as l,j as M,n as o,r as i,u as B}from"../chunks/D8J4TNL3.js";import{e as W}from"../chunks/Dt8PonAD.js";import{C as N}from"../chunks/C7-HD7wx.js";import{T as X}from"../chunks/B9RSJ_i2.js";import{T as Y}from"../chunks/Dv8TUmhC.js";import{M as C}from"../chunks/fbmE-hKI.js";import{g as D}from"../chunks/DuhP9bn7.js";import{T as F,a as H}from"../chunks/FyZdms2r.js";import{d as J}from"../chunks/Cl4o5fGF.js";import{S as q}from"../chunks/CBDpI-cA.js";import{M as G}from"../chunks/Wx7ZzNF0.js";import{U as K}from"../chunks/DbGy753b.js";var O=k('<!> <!> <div class="variables svelte-tdxmcj"></div>',1),Q=k(`<section><p>Style variables, or just "variables" in Moss, are <!> that can be grouped into a <!>. Each variable can
			have values for light and/or dark <!>. They're design tokens with an API.</p> <p>The goal of the variables system is to provide runtime theming that's efficient and ergnomic
			for both developers and end-users. Variables can be composed in multiple ways:</p> <ul><li>by CSS classes, both utility and component</li> <li>by other variables, both in calculations and to add useful semantics (e.g. <code>button_fill_hover</code> defaults to <code>fg_2</code> but can be themed independently)</li> <li>in JS like the <a href="https://svelte.dev/">Svelte</a> components in <a href="https://www.fuz.dev/">Fuz</a></li></ul> <p>Variables also provide an interface that's generally secure for user-generated content, if
			you're into that kind of thing.</p> <p>The result is a flexible system that aligns with modern CSS to deliver high-capability UX and
			DX with minimal overhead.</p></section> <section><div class="mb_md"><!></div> <!></section> <!>`,1);function he(w,P){U(P,!0);const A=D("variables"),v=J.slice().sort((m,f)=>m.name.localeCompare(f.name));X(w,{tome:A,children:(m,f)=>{var _=Q(),d=T(_),u=l(d),b=t(l(u));C(b,{path:"https://developer.mozilla.org/en-US/docs/Web/CSS/--*",children:(a,h)=>{o();var e=n("CSS custom properties");r(a,e)},$$slots:{default:!0}});var g=t(b,2);Y(g,{name:"themes",children:(a,h)=>{o();var e=n("theme");r(a,e)},$$slots:{default:!0}});var I=t(g,2);C(I,{path:"Web/CSS/color-scheme",children:(a,h)=>{o();var e=n("color-schemes");r(a,e)},$$slots:{default:!0}}),o(),i(u),o(8),i(d);var c=t(d,2),p=l(c),E=l(p);G(E,{path:"theme.js"}),i(p);var L=t(p,2);N(L,{lang:"ts",content:`export interface Theme {
	name: string;
	variables: Style_Variable[];
}

export interface Style_Variable {
	name: string;
	light?: string;
	dark?: string;
	summary?: string;
}`}),i(c);var V=t(c,2);F(V,{children:(a,h)=>{var e=O(),$=T(e);const j=B(()=>`All ${v.length} style variables`);H($,{get text(){return M(j)}});var S=t($,2);K(S,{children:(s,x)=>{o();var R=n("Many of these will change.");r(s,R)}});var y=t(S,2);W(y,21,()=>v,s=>s.name,(s,x)=>{q(s,{get name(){return M(x).name},classes:"menu_item"})}),i(y),r(a,e)},$$slots:{default:!0}}),r(m,_)},$$slots:{default:!0}}),z()}export{he as component};
