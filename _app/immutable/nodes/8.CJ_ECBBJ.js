import{t as _,a as o,b as T}from"../chunks/CP7485SI.js";import{p as M,a as j,f as p,s as l,n as A,r as b,c as C,t as I}from"../chunks/D8J4TNL3.js";import{s as P}from"../chunks/BaXQBk7o.js";import{e as z}from"../chunks/Dt8PonAD.js";import{C as E}from"../chunks/C7-HD7wx.js";import{T as R}from"../chunks/BSVe7oso.js";import{g as B}from"../chunks/zi67XB-Y.js";import{T as x,a as f}from"../chunks/8vlOpmi9.js";import{U}from"../chunks/DbGy753b.js";var L=_("<!> <p>Moss has three CSS files:</p> <!>",1),N=_('<li class="overflow_wrap_break_word svelte-bz9f2v"> </li>'),O=_(`<!> <p>Moss supports utility classes. The API has been drifting to be more consistently match CSS at
			the cost of verbosity.</p> <p>Moss exports <a href="https://github.com/ryanatkn/moss/blob/main/src/lib/css_class_helpers.ts">helpers</a> to generate styles on demand based on class usage in your source files, so you can ship the minimal
			code needed.</p> <aside>⚠️ Moss does not fully support <a href="https://svelte.dev/docs/svelte/class#Attributes-Objects-and-arrays">Svelte's object+array class syntax</a>, added in 5.16. For now see <a href="https://github.com/ryanatkn/moss/blob/main/src/lib/css_class_helpers.test.ts">the tests</a> for the supported forms. The current strategy uses a regexp for TS and Svelte files, but we'll
			probably need to more robustly scan the parsed AST.</aside> <ul class="classes unstyled svelte-bz9f2v"></ul>`,1),Y=_("<!> <!> <!>",1);function Z(u,g){M(g,!0);const v=B("classes"),e="inherit|initial|revert|revert_layer|unset",w=["relative|absolute|fixed|sticky|static","overflow_auto|hidden|scroll|clip|visible","overflow_x|y_auto|hidden|scroll|clip|visible",`overflow_wrap_normal|anywhere|break_word|${e}`,`scrollbar_width_auto|thin|none|${e}`,`scrollbar_gutter_auto|stable|stable_both_edges|${e}`,`visibility_visible|hidden|collapse|${e}`,`display_none|contents|block|flow_root|inline|inline_block|run_in|list_item|inline_list_item|flex|inline_flex|grid|inline_grid|ruby|block_ruby|table|inline_table|${e}`,"flex_1","flex_wrap|wrap_reverse|nowrap","flex_row|column|row_reverse|column_reverse","grow|shrink","grow|shrink_0","align_items_center|start|end|baseline|stretch","align_content_center|start|end|baseline|space_between|space_around|space_evenly|stretch","align_self_center|start|end|baseline|stretch","justify_content_center|start|end|left|right|space_between|space_around|space_evenly|stretch","justify_items_center|start|end|left|right|baseline|stretch","justify_self_center|start|end|left|right|baseline|stretch","float_none|left|right|inline_start|inline_end","flip_x|y|xy","font_family_sans|serif|mono","line_height_xs-xl","font_size_xs-xl9","icon_size_xs-xl3","text_align_start|end|left|right|center|justify|justify_all|match_parent","vertical_align_baseline|sub|super|text_top|text_bottom|middle|top|bottom",`word_break_normal|break_all|keep_all|${e}`,"white_space_normal|nowrap|pre|pre_wrap|pre_line|break_spaces","white_space_collapse_collapse|preserve|preserve_breaks|preserve_spaces|break_spaces","text_wrap_wrap|nowrap|balance|pretty|stable",`user_select_none|auto|text|all|${e}`,"font_weight_100-900","text_color_0-10","darken|lighten_1-9","bg|fg","bg|fg_1-9","color_darken|lighten_1-9","color_bg|fg","color_bg|fg_1-9","hue_a-i","color_a-i_1 -9","bg_a-i_1-9","border_color_1-5","border_color_a-i","border_color_transparent","border_width_0-9","outline_width_0|focused|active",`border_style_none|hidden|dotted|dashed|solid|double|groove|ridge|inset|outset|${e}`,"border_radius_0|10|20|30|40|50|60|70|80|90|100","border_radius_xs3-xl","border_top|bottom_left|right_radius_0|10|20|30|40|50|60|70|80|90|100","border_top|bottom_left|right_radius_xs3-xl","fade_0|100","fade_1-6","shadow_xs-xl","shadow_top|bottom_xs-xl","shadow_inset_xs-xl","shadow_inset_top|bottom_xs-xl","shadow_color_highlight|glow|shroud","shadow_color_a-i","shadow_alpha_1-5","shadow_inherit|none","w|h_0|100|1px-3px|auto|max_content|min_content|fit_content|stretch","w|h_xs5-xl15","t|b|l|r_0|100|1px-3px|auto","t|b|l|r_xs5-xl15","inset_0|1px-3px|xs5-xl15","p|pt|pr|pb|pl|px|py_xs5-xl15","p|pt|pr|pb|pl|px|py_0|1px-3px","pt|pr|pb|pl_100","m|mt|mr|mb|ml|mx|my_xs5-xl15","m|mt|mr|mb|ml|mx|my_0|1px-3px|auto","mt|mr|mb|ml_100","gap_xs5-xl15","column|row_gap_xs5-xl15","pixelated","box","column","row","formatted","ellipsis","width_xs-xl","min_width_xs-xl","height_xs-xl","min_height_xs-xl","selected","selectable","clickable","pane","panel","icon_button","plain","menu_item","chevron","chip"];R(u,{tome:v,children:(y,H)=>{var c=Y(),d=p(c);U(d,{children:(s,h)=>{A();var t=T("Both the docs and implementation of these need a lot more work.");o(s,t)}});var m=l(d,2);x(m,{children:(s,h)=>{var t=L(),r=p(t);f(r,{text:"Optional CSS classes"});var a=l(r,4);E(a,{content:`<!-- +layout.svelte -->
<script>
	import '@ryanatkn/moss/style.css';
	import '@ryanatkn/moss/theme.css'; // or bring your own
	import '$routes/moss.css'; // generated by \`gro_plugin_moss\`
	// ...
<\/script>`}),o(s,t)},$$slots:{default:!0}});var $=l(m,2);x($,{children:(s,h)=>{var t=O(),r=p(t);f(r,{text:"Utility classes"});var a=l(r,8);z(a,20,()=>w,n=>n,(n,k)=>{var i=N(),S=C(i);b(i),I(()=>P(S,`.${k??""}`)),o(n,i)}),b(a),o(s,t)},$$slots:{default:!0}}),o(y,c)},$$slots:{default:!0}}),j()}export{Z as component};
