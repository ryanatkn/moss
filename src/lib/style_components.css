/* @ryanatkn/fuz/style_components.css */

.box {
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;
}

/* can be used to override the direction of a `.box` */
.row {
	display: flex;
	flex-direction: row;
	align-items: center;
}

/* Makes flexboxes wrap. */
.wrap {
	flex-wrap: wrap;
	white-space: initial;
}

/* Stops text from wrapping. */
.nowrap {
	flex-wrap: nowrap;
	white-space: nowrap;
}

/* Formats content to wrap long strings and preserve displayed whitespace. */
.formatted {
	overflow: hidden;
	white-space: break-spaces;
}

/* TODO rename these? use to be columns, maybe should be? */
.width_md {
	width: 100%;
	max-width: var(--width_md);
}
.width_sm {
	width: 100%;
	max-width: var(--width_sm);
}

/* TODO maybe remove? */
.selectable {
	cursor: pointer;
	background-color: var(--button_bg);
	border-color: var(--border_color_3);
	border-style: var(--border_style);
	border-width: var(--border_width);
}
.selectable:hover {
	background-color: var(--button_bg_hover);
	border-color: var(--border_color_2);
}
.selectable.selected,
.selectable:active {
	background-color: var(--button_bg_active);
	border-color: var(--color_a_5);
}
.selectable.selected {
	cursor: default;
}
.selectable.selected.deselectable:not(:disabled) {
	cursor: pointer;
}

/* A pane is a box floating over the page, like for dialogs.
By default it's opaque, resetting the background to the initial depth. */
.pane {
	background-color: var(--pane_bg, var(--bg));
	box-shadow: var(--pane_shadow, var(--shadow_md));
	border-radius: var(--radius_xs);
}
/* A panel is a box embedded into the page, useful for visually isolating content. */
.panel {
	border-radius: var(--radius_sm);
	background-color: var(--panel_bg, var(--fg_1));
}

/* TODO @multiple docs in library */

/* TODO other button variants? */
/* TODO this is slightly strange that it doesn't use --icon_size */
.icon_button {
	width: var(--input_height);
	height: var(--input_height);
	min-width: var(--input_height);
	min-height: var(--input_height);
	flex-shrink: 0;
	font-weight: 900;
	padding: 0;
}
.plain {
	border: none;
	box-shadow: none;
	--button_bg: transparent;
}

.menu_item {
	--border_radius: 0;
	--border_color: var(--border_color_3);
	position: relative;
	z-index: 2;
	width: 100%;
	min-height: var(--min_height, var(--icon_size_sm));
	display: flex;
	justify-content: space-between;
	align-items: center;
	padding: var(--menu_item_padding, var(--space_xs3) var(--space_xs));
}
.menu_item.selected {
	/* TODO different patterns for border and bg? */
	--border_color: var(--color_a_5);
	background-color: var(--fg_1);
	z-index: 1;
}
.menu_item.plain {
	border: none;
}
.menu_item .content {
	display: flex;
	align-items: center;
	flex: 1;
	/* allows the flex children to shrink */
	min-width: 0;
}
.menu_item .icon {
	width: var(--icon_size, var(--icon_size_md));
	margin-right: var(--space_sm);
	flex-shrink: 0;
	text-align: center;
	font-weight: 900;
}
.menu_item .title {
	margin-right: var(--space_lg);
	flex-shrink: 1;
	overflow: hidden;
	white-space: nowrap;
	text-overflow: ellipsis;
	line-height: var(--line_height_lg); /* prevents the bottom of g's and others from being cut off */
}

.chevron {
	position: relative;
	height: 8px;
}
.chevron::before {
	display: block;
	content: '';
	border: 4px solid transparent;
	border-left-color: var(--text_2);
}

.chip {
	font-weight: 600;
	padding: var(--space_xs5) var(--space_sm); /* maybe different inside `p`? using `calc` with `--size`? */
	background-color: var(--fg_1);
	border-radius: var(--radius_xs);
}
a.chip {
	font-weight: 700;
}

.clickable {
	transform: var(--clickable_transform, scale3d(1, 1, 1));
	transform-origin: var(--clickable_transform_origin);
	transition-duration: var(--clickable_transition_duration); /* default to instant, chunky/lofi */
}
.clickable:focus {
	transform: var(--clickable_transform_focus, scale3d(1.07, 1.07, 1.07));
}
.clickable:hover {
	transform: var(--clickable_transform_hover, scale3d(1.1, 1.1, 1.1));
}
.clickable:active {
	transform: var(--clickable_transform_active, scale3d(1.2, 1.2, 1.2));
}
